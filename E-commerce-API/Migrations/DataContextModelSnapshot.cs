// <auto-generated />
using System;
using ECommerce.API;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ECommerce.API.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.7");

            modelBuilder.Entity("Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Passwrod")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Discount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("Value")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Discounts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(7054),
                            EndDate = new DateTime(2021, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 1,
                            StartDate = new DateTime(2020, 5, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = 20
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(7059),
                            EndDate = new DateTime(2023, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 1,
                            StartDate = new DateTime(2022, 5, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = 30
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(7061),
                            EndDate = new DateTime(2024, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 2,
                            StartDate = new DateTime(2023, 5, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = 40
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(7064),
                            EndDate = new DateTime(2026, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 2,
                            StartDate = new DateTime(2020, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = 50
                        });
                });

            modelBuilder.Entity("ECommerce.API.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(6269),
                            Name = "Electronices",
                            Path = "category_Fuji_Dash_Electronics_1x._SY304_CB432774322_.jpg"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(6297),
                            Name = "Computers",
                            Path = "category-Fuji_Dash_PC_1x._SY304_CB431800965_.jpg"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(6300),
                            Name = "Games",
                            Path = "category-games_Fuji_Desktop_Dash_Kindle_1x._SY304_CB639752818_.jpg"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(6302),
                            Name = "Pets",
                            Path = "category-pets_Fuji_Dash_Pets_1X._SY304_CB639746743_.jpg"
                        });
                });

            modelBuilder.Entity("ECommerce.API.Models.Identity.AppRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConcurrencyStamp = "6f9aaf78-3f63-4cf6-95f1-d5d4d8304ced",
                            Name = "User",
                            NormalizedName = "USER"
                        },
                        new
                        {
                            Id = 2,
                            ConcurrencyStamp = "28948eed-02ed-4ed8-b6be-27f2320ac12b",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = 3,
                            ConcurrencyStamp = "4926dce6-ce2f-4019-9407-b529cbb61158",
                            Name = "SalesManager",
                            NormalizedName = "SALESMANAGER"
                        });
                });

            modelBuilder.Entity("ECommerce.API.Models.Identity.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImagePath")
                        .HasColumnType("TEXT");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("TEXT");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 100,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "41e503d5-22da-4ccc-9680-1bd5e06de781",
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(6568),
                            Email = "appuser@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PasswordHash = "laksjdflaksj",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "appuser@gmail.com"
                        },
                        new
                        {
                            Id = 101,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "4870e629-dc8f-401e-8d7b-c83c921d64ed",
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(6592),
                            Email = "appuser2@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PasswordHash = "laksjdflaksj",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "appuser2@gmail.com"
                        },
                        new
                        {
                            Id = 102,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c3cdc14e-b35b-450a-b4bf-32eff4c7412c",
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(6608),
                            Email = "appuser3@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PasswordHash = "laksjdflaksj",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "appuser3@gmail.com"
                        },
                        new
                        {
                            Id = 103,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "76cd0669-98b4-435f-b8d9-b5b98beb75ee",
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(6623),
                            Email = "appuser4@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PasswordHash = "laksjdflaksj",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "appuser4@gmail.com"
                        },
                        new
                        {
                            Id = 104,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "665f7b34-8403-4aa0-90a9-21992a842a47",
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(6639),
                            Email = "appuser5@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PasswordHash = "laksjdflaksj",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "appuse54@gmail.com"
                        });
                });

            modelBuilder.Entity("ECommerce.API.Models.Inventory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("CurrentAmount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Inventory");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(7135),
                            CurrentAmount = 5,
                            ProductId = 1,
                            Quantity = 40
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(7139),
                            CurrentAmount = 0,
                            ProductId = 1,
                            Quantity = 40
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(7141),
                            CurrentAmount = 0,
                            ProductId = 3,
                            Quantity = 10
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(7142),
                            CurrentAmount = 10,
                            ProductId = 3,
                            Quantity = 10
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(7144),
                            CurrentAmount = 0,
                            ProductId = 4,
                            Quantity = 25
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(7145),
                            CurrentAmount = 0,
                            ProductId = 5,
                            Quantity = 40
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(7147),
                            CurrentAmount = 5,
                            ProductId = 6,
                            Quantity = 15
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(7149),
                            CurrentAmount = 15,
                            ProductId = 7,
                            Quantity = 30
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(7150),
                            CurrentAmount = 25,
                            ProductId = 8,
                            Quantity = 25
                        });
                });

            modelBuilder.Entity("ECommerce.API.Models.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AppUserId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("ECommerce.API.Models.InvoiceDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductQuantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("ProductId");

                    b.ToTable("InvoicesDetails");
                });

            modelBuilder.Entity("ECommerce.API.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("FullImagePath")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsBestSeller")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<string>("ThumbImagePath")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(6388),
                            FullImagePath = "laptop-full_71rXSVqET9L._AC_SL1257_.jpg",
                            IsBestSeller = true,
                            Name = "Sceptre 24 Professional Thin 75Hz 1080p LED Monitor 2x HDMI VGA Build-in Speakers, Machine Black (E248W-19203R Series)",
                            Path = "electronics-laptop_71rXSVqET9L._AC_UL320_.jpg",
                            Price = 200m,
                            ThumbImagePath = "laptop-thumb_71qid7QFWJL._SX3000_.jpg"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(6393),
                            FullImagePath = "mobile-full_81AeiqxHkwL._AC_SL1500_.jpg",
                            IsBestSeller = true,
                            Name = "Mobile",
                            Path = "electronics-mobile_81AeiqxHkwL._AC_UL320_.jpg",
                            Price = 100m,
                            ThumbImagePath = "mobile-thumb_81AeiqxHkwL._AC_SY679_.jpg"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(6396),
                            FullImagePath = "printer-full_61UdeL7aO-L._AC_SL1500_.jpg",
                            IsBestSeller = true,
                            Name = "Printer",
                            Path = "electronics-printer_61UdeL7aO-L._AC_UL320_.jpg",
                            Price = 400m,
                            ThumbImagePath = "printer-thumb_61UdeL7aO-L._AC_SX466_.jpg"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(6398),
                            FullImagePath = "earpod_full-7120GgUKj3L._AC_SL1500_.jpg",
                            IsBestSeller = true,
                            Name = "EarPods",
                            Path = "electronices-headphones_7120GgUKj3L._AC_UL320_.jpg",
                            Price = 15m,
                            ThumbImagePath = "earpod-thumb_7120GgUKj3L._AC_SX522_.jpg"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(6400),
                            FullImagePath = "batteries-full_81ZnAYiX5sL._AC_SL1500_.jpg",
                            IsBestSeller = true,
                            Name = "Batteries",
                            Path = "electronics-batteries_81ZnAYiX5sL._AC_UL320_.jpg",
                            Price = 5m,
                            ThumbImagePath = "batteries-thumb_81ZnAYiX5sL._AC_SX679_.jpg"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(6459),
                            FullImagePath = "pen-full_21l795GXZkL._AC_SL1024_.jpg",
                            IsBestSeller = true,
                            Name = "Pen",
                            Path = "electronics-pen_21SPDoiRuGL._AC_UL320_.jpg",
                            Price = 250m,
                            ThumbImagePath = "pen-thumb_21l795GXZkL._AC_SY500_.jpg"
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(6462),
                            FullImagePath = "usb-full_71wrIZujPIL._AC_SL1500_.jpg",
                            IsBestSeller = false,
                            Name = "Usb",
                            Path = "electronics-usb_71wrIZujPIL._AC_UL320_.jpg",
                            Price = 25m,
                            ThumbImagePath = "usb-thumb_71wrIZujPIL._AC_SX466_.jpg"
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(6465),
                            FullImagePath = "player-full_71E4InwfcPL._AC_SL1500_.jpg",
                            IsBestSeller = true,
                            Name = "Player",
                            Path = "computers-player_71E4InwfcPL._AC_UL320_.jpg",
                            Price = 350m,
                            ThumbImagePath = "player-thumb_71E4InwfcPL._AC_SX466_.jpg"
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(6467),
                            FullImagePath = "controller-full_61X3uV04ztL._SL1500_.jpg",
                            IsBestSeller = true,
                            Name = "Controller",
                            Path = "games-controller_61X3uV04ztL._AC_UL320_.jpg",
                            Price = 25m,
                            ThumbImagePath = "controller-thumb_61X3uV04ztL._SX522_.jpg"
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(6469),
                            FullImagePath = "vr-full_61tE7IcuLmL._SL1500_.jpg",
                            IsBestSeller = false,
                            Name = "Vr-Set",
                            Path = "games-vr_61tE7IcuLmL._AC_UL320_.jpg",
                            Price = 90m,
                            ThumbImagePath = "vr-thumb_61tE7IcuLmL._SX522_.jpg"
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(6471),
                            FullImagePath = "xbox-full_61JGKhqxHxL._SL1500_.jpg",
                            IsBestSeller = true,
                            Name = "Xbox",
                            Path = "games-xbox_61JGKhqxHxL._AC_UL320_.jpg",
                            Price = 150m,
                            ThumbImagePath = "xbox-thumb_61JGKhqxHxL._SX522_.jpg"
                        });
                });

            modelBuilder.Entity("ECommerce.API.Models.ProductDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductDetails");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(6840),
                            ProductId = 1,
                            Text = "24 Ultra slim profile "
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(6843),
                            ProductId = 1,
                            Text = "Slim bezel with thin chassis. Power Range (V, A, Hz)- AC-DC Adapter Input 100 – 240 VAC, 50/60 Hz, 1.0A (Max.) Output - 12V DC, 2.5A. Power Consumption (Typical)- 25.4W. Neck/Stand Detachable: Yes "
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(6845),
                            ProductId = 1,
                            Text = "2 x HDMI Ports (convertible to DVI).Contrast Ratio:1000 : 1"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(6846),
                            ProductId = 1,
                            Text = "VESA wall mount ready. HDMI Input Signal Support - 1920 x 1080 @ 75Hz, 1080/60p, 1080/60i, 720p, 480p, 480i, Built-in Speakers - 2 x 2W 8 Ohm.Mounting type: VESA Hole Pattern 100mm x 100mm"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(6848),
                            ProductId = 2,
                            Text = "24 Ultra slim profile "
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(6850),
                            ProductId = 2,
                            Text = "Slim bezel with thin chassis. Power Range (V, A, Hz)- AC-DC Adapter Input 100 – 240 VAC, 50/60 Hz, 1.0A (Max.) Output - 12V DC, 2.5A. Power Consumption (Typical)- 25.4W. Neck/Stand Detachable: Yes "
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(6851),
                            ProductId = 2,
                            Text = "2 x HDMI Ports (convertible to DVI).Contrast Ratio:1000 : 1"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(6853),
                            ProductId = 2,
                            Text = "VESA wall mount ready. HDMI Input Signal Support - 1920 x 1080 @ 75Hz, 1080/60p, 1080/60i, 720p, 480p, 480i, Built-in Speakers - 2 x 2W 8 Ohm.Mounting type: VESA Hole Pattern 100mm x 100mm"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(6854),
                            ProductId = 3,
                            Text = "24 Ultra slim profile "
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(6856),
                            ProductId = 3,
                            Text = "Slim bezel with thin chassis. Power Range (V, A, Hz)- AC-DC Adapter Input 100 – 240 VAC, 50/60 Hz, 1.0A (Max.) Output - 12V DC, 2.5A. Power Consumption (Typical)- 25.4W. Neck/Stand Detachable: Yes "
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(6858),
                            ProductId = 3,
                            Text = "2 x HDMI Ports (convertible to DVI).Contrast Ratio:1000 : 1"
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(6859),
                            ProductId = 3,
                            Text = "VESA wall mount ready. HDMI Input Signal Support - 1920 x 1080 @ 75Hz, 1080/60p, 1080/60i, 720p, 480p, 480i, Built-in Speakers - 2 x 2W 8 Ohm.Mounting type: VESA Hole Pattern 100mm x 100mm"
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(6861),
                            ProductId = 4,
                            Text = "24 Ultra slim profile "
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(6863),
                            ProductId = 4,
                            Text = "Slim bezel with thin chassis. Power Range (V, A, Hz)- AC-DC Adapter Input 100 – 240 VAC, 50/60 Hz, 1.0A (Max.) Output - 12V DC, 2.5A. Power Consumption (Typical)- 25.4W. Neck/Stand Detachable: Yes "
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(6864),
                            ProductId = 4,
                            Text = "2 x HDMI Ports (convertible to DVI).Contrast Ratio:1000 : 1"
                        },
                        new
                        {
                            Id = 16,
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(6866),
                            ProductId = 4,
                            Text = "VESA wall mount ready. HDMI Input Signal Support - 1920 x 1080 @ 75Hz, 1080/60p, 1080/60i, 720p, 480p, 480i, Built-in Speakers - 2 x 2W 8 Ohm.Mounting type: VESA Hole Pattern 100mm x 100mm"
                        },
                        new
                        {
                            Id = 17,
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(6867),
                            ProductId = 5,
                            Text = "24 Ultra slim profile "
                        },
                        new
                        {
                            Id = 18,
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(6869),
                            ProductId = 5,
                            Text = "Slim bezel with thin chassis. Power Range (V, A, Hz)- AC-DC Adapter Input 100 – 240 VAC, 50/60 Hz, 1.0A (Max.) Output - 12V DC, 2.5A. Power Consumption (Typical)- 25.4W. Neck/Stand Detachable: Yes "
                        },
                        new
                        {
                            Id = 19,
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(6871),
                            ProductId = 5,
                            Text = "2 x HDMI Ports (convertible to DVI).Contrast Ratio:1000 : 1"
                        },
                        new
                        {
                            Id = 20,
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(6872),
                            ProductId = 5,
                            Text = "VESA wall mount ready. HDMI Input Signal Support - 1920 x 1080 @ 75Hz, 1080/60p, 1080/60i, 720p, 480p, 480i, Built-in Speakers - 2 x 2W 8 Ohm.Mounting type: VESA Hole Pattern 100mm x 100mm"
                        },
                        new
                        {
                            Id = 21,
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(6874),
                            ProductId = 6,
                            Text = "24 Ultra slim profile "
                        },
                        new
                        {
                            Id = 22,
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(6876),
                            ProductId = 6,
                            Text = "Slim bezel with thin chassis. Power Range (V, A, Hz)- AC-DC Adapter Input 100 – 240 VAC, 50/60 Hz, 1.0A (Max.) Output - 12V DC, 2.5A. Power Consumption (Typical)- 25.4W. Neck/Stand Detachable: Yes "
                        },
                        new
                        {
                            Id = 23,
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(6877),
                            ProductId = 6,
                            Text = "2 x HDMI Ports (convertible to DVI).Contrast Ratio:1000 : 1"
                        },
                        new
                        {
                            Id = 24,
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(6879),
                            ProductId = 6,
                            Text = "VESA wall mount ready. HDMI Input Signal Support - 1920 x 1080 @ 75Hz, 1080/60p, 1080/60i, 720p, 480p, 480i, Built-in Speakers - 2 x 2W 8 Ohm.Mounting type: VESA Hole Pattern 100mm x 100mm"
                        },
                        new
                        {
                            Id = 25,
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(6881),
                            ProductId = 7,
                            Text = "24 Ultra slim profile "
                        },
                        new
                        {
                            Id = 26,
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(6883),
                            ProductId = 7,
                            Text = "Slim bezel with thin chassis. Power Range (V, A, Hz)- AC-DC Adapter Input 100 – 240 VAC, 50/60 Hz, 1.0A (Max.) Output - 12V DC, 2.5A. Power Consumption (Typical)- 25.4W. Neck/Stand Detachable: Yes "
                        },
                        new
                        {
                            Id = 27,
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(6884),
                            ProductId = 7,
                            Text = "2 x HDMI Ports (convertible to DVI).Contrast Ratio:1000 : 1"
                        },
                        new
                        {
                            Id = 28,
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(6886),
                            ProductId = 7,
                            Text = "VESA wall mount ready. HDMI Input Signal Support - 1920 x 1080 @ 75Hz, 1080/60p, 1080/60i, 720p, 480p, 480i, Built-in Speakers - 2 x 2W 8 Ohm.Mounting type: VESA Hole Pattern 100mm x 100mm"
                        },
                        new
                        {
                            Id = 29,
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(6888),
                            ProductId = 8,
                            Text = "24 Ultra slim profile "
                        },
                        new
                        {
                            Id = 30,
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(6889),
                            ProductId = 8,
                            Text = "Slim bezel with thin chassis. Power Range (V, A, Hz)- AC-DC Adapter Input 100 – 240 VAC, 50/60 Hz, 1.0A (Max.) Output - 12V DC, 2.5A. Power Consumption (Typical)- 25.4W. Neck/Stand Detachable: Yes "
                        },
                        new
                        {
                            Id = 31,
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(6891),
                            ProductId = 8,
                            Text = "2 x HDMI Ports (convertible to DVI).Contrast Ratio:1000 : 1"
                        },
                        new
                        {
                            Id = 32,
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(6892),
                            ProductId = 8,
                            Text = "VESA wall mount ready. HDMI Input Signal Support - 1920 x 1080 @ 75Hz, 1080/60p, 1080/60i, 720p, 480p, 480i, Built-in Speakers - 2 x 2W 8 Ohm.Mounting type: VESA Hole Pattern 100mm x 100mm"
                        },
                        new
                        {
                            Id = 33,
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(6894),
                            ProductId = 9,
                            Text = "24 Ultra slim profile "
                        },
                        new
                        {
                            Id = 34,
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(6896),
                            ProductId = 9,
                            Text = "Slim bezel with thin chassis. Power Range (V, A, Hz)- AC-DC Adapter Input 100 – 240 VAC, 50/60 Hz, 1.0A (Max.) Output - 12V DC, 2.5A. Power Consumption (Typical)- 25.4W. Neck/Stand Detachable: Yes "
                        },
                        new
                        {
                            Id = 35,
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(6897),
                            ProductId = 9,
                            Text = "2 x HDMI Ports (convertible to DVI).Contrast Ratio:1000 : 1"
                        },
                        new
                        {
                            Id = 36,
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(6899),
                            ProductId = 9,
                            Text = "VESA wall mount ready. HDMI Input Signal Support - 1920 x 1080 @ 75Hz, 1080/60p, 1080/60i, 720p, 480p, 480i, Built-in Speakers - 2 x 2W 8 Ohm.Mounting type: VESA Hole Pattern 100mm x 100mm"
                        },
                        new
                        {
                            Id = 37,
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(6900),
                            ProductId = 10,
                            Text = "24 Ultra slim profile "
                        },
                        new
                        {
                            Id = 38,
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(6902),
                            ProductId = 10,
                            Text = "Slim bezel with thin chassis. Power Range (V, A, Hz)- AC-DC Adapter Input 100 – 240 VAC, 50/60 Hz, 1.0A (Max.) Output - 12V DC, 2.5A. Power Consumption (Typical)- 25.4W. Neck/Stand Detachable: Yes "
                        },
                        new
                        {
                            Id = 39,
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(6904),
                            ProductId = 10,
                            Text = "2 x HDMI Ports (convertible to DVI).Contrast Ratio:1000 : 1"
                        },
                        new
                        {
                            Id = 40,
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(6905),
                            ProductId = 10,
                            Text = "VESA wall mount ready. HDMI Input Signal Support - 1920 x 1080 @ 75Hz, 1080/60p, 1080/60i, 720p, 480p, 480i, Built-in Speakers - 2 x 2W 8 Ohm.Mounting type: VESA Hole Pattern 100mm x 100mm"
                        },
                        new
                        {
                            Id = 41,
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(6907),
                            ProductId = 11,
                            Text = "24 Ultra slim profile "
                        },
                        new
                        {
                            Id = 42,
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(6908),
                            ProductId = 11,
                            Text = "Slim bezel with thin chassis. Power Range (V, A, Hz)- AC-DC Adapter Input 100 – 240 VAC, 50/60 Hz, 1.0A (Max.) Output - 12V DC, 2.5A. Power Consumption (Typical)- 25.4W. Neck/Stand Detachable: Yes "
                        },
                        new
                        {
                            Id = 43,
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(6910),
                            ProductId = 11,
                            Text = "2 x HDMI Ports (convertible to DVI).Contrast Ratio:1000 : 1"
                        },
                        new
                        {
                            Id = 44,
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(6912),
                            ProductId = 11,
                            Text = "VESA wall mount ready. HDMI Input Signal Support - 1920 x 1080 @ 75Hz, 1080/60p, 1080/60i, 720p, 480p, 480i, Built-in Speakers - 2 x 2W 8 Ohm.Mounting type: VESA Hole Pattern 100mm x 100mm"
                        });
                });

            modelBuilder.Entity("ECommerce.API.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AppUserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Rating")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ProductId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AppUserId = 100,
                            Body = "Well Done!",
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(6729),
                            ProductId = 1,
                            Rating = 4m
                        },
                        new
                        {
                            Id = 2,
                            AppUserId = 101,
                            Body = "Well Done!",
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(6733),
                            ProductId = 1,
                            Rating = 5m
                        },
                        new
                        {
                            Id = 3,
                            AppUserId = 102,
                            Body = "Well Done!",
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(6735),
                            ProductId = 1,
                            Rating = 1m
                        },
                        new
                        {
                            Id = 4,
                            AppUserId = 104,
                            Body = "Well Done!",
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(6739),
                            ProductId = 1,
                            Rating = 5m
                        },
                        new
                        {
                            Id = 5,
                            AppUserId = 104,
                            Body = "Well Done!",
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(6740),
                            ProductId = 2,
                            Rating = 2m
                        },
                        new
                        {
                            Id = 6,
                            AppUserId = 103,
                            Body = "Well Done!",
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(6743),
                            ProductId = 2,
                            Rating = 3m
                        },
                        new
                        {
                            Id = 7,
                            AppUserId = 104,
                            Body = "Well Done!",
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(6745),
                            ProductId = 2,
                            Rating = 5m
                        },
                        new
                        {
                            Id = 8,
                            AppUserId = 104,
                            Body = "Well Done!",
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(6746),
                            ProductId = 3,
                            Rating = 1m
                        },
                        new
                        {
                            Id = 9,
                            AppUserId = 102,
                            Body = "Well Done!",
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(6749),
                            ProductId = 4,
                            Rating = 4m
                        },
                        new
                        {
                            Id = 10,
                            AppUserId = 102,
                            Body = "Well Done!",
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(6751),
                            ProductId = 4,
                            Rating = 3m
                        },
                        new
                        {
                            Id = 11,
                            AppUserId = 104,
                            Body = "Well Done!",
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(6753),
                            ProductId = 5,
                            Rating = 5m
                        },
                        new
                        {
                            Id = 12,
                            AppUserId = 104,
                            Body = "Well Done!",
                            CreatedAt = new DateTime(2022, 12, 28, 9, 2, 50, 664, DateTimeKind.Local).AddTicks(6756),
                            ProductId = 6,
                            Rating = 5m
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<int>("RoleId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RoleId")
                        .HasColumnType("INTEGER");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Discount", b =>
                {
                    b.HasOne("ECommerce.API.Models.Product", "Product")
                        .WithMany("Discounts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ECommerce.API.Models.Inventory", b =>
                {
                    b.HasOne("ECommerce.API.Models.Product", "Product")
                        .WithMany("Inventories")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ECommerce.API.Models.Invoice", b =>
                {
                    b.HasOne("ECommerce.API.Models.Identity.AppUser", "AppUser")
                        .WithMany("Invoices")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("ECommerce.API.Models.InvoiceDetails", b =>
                {
                    b.HasOne("Customer", null)
                        .WithMany("InovicesDetails")
                        .HasForeignKey("CustomerId");

                    b.HasOne("ECommerce.API.Models.Invoice", null)
                        .WithMany("InvoicesDetails")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ECommerce.API.Models.Product", "Product")
                        .WithMany("InvoicesDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ECommerce.API.Models.Product", b =>
                {
                    b.HasOne("ECommerce.API.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ECommerce.API.Models.ProductDetails", b =>
                {
                    b.HasOne("ECommerce.API.Models.Product", "Product")
                        .WithMany("Details")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ECommerce.API.Models.Review", b =>
                {
                    b.HasOne("ECommerce.API.Models.Identity.AppUser", "AppUser")
                        .WithMany("Reviews")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Customer", null)
                        .WithMany("Reviews")
                        .HasForeignKey("CustomerId");

                    b.HasOne("ECommerce.API.Models.Product", "Product")
                        .WithMany("Reviews")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("ECommerce.API.Models.Identity.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("ECommerce.API.Models.Identity.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("ECommerce.API.Models.Identity.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("ECommerce.API.Models.Identity.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ECommerce.API.Models.Identity.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("ECommerce.API.Models.Identity.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Customer", b =>
                {
                    b.Navigation("InovicesDetails");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("ECommerce.API.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ECommerce.API.Models.Identity.AppUser", b =>
                {
                    b.Navigation("Invoices");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("ECommerce.API.Models.Invoice", b =>
                {
                    b.Navigation("InvoicesDetails");
                });

            modelBuilder.Entity("ECommerce.API.Models.Product", b =>
                {
                    b.Navigation("Details");

                    b.Navigation("Discounts");

                    b.Navigation("Inventories");

                    b.Navigation("InvoicesDetails");

                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
